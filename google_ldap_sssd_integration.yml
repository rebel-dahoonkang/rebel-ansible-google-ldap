---
- name: Configure Linux server for Google Secure LDAP (SSSD) integration
  hosts: your_ubuntu_servers # inventory.ini에 정의된 호스트 그룹
  become: true                # 루트 권한으로 실행 (sudo)

  vars:
    # Google Secure LDAP 설정
    ldap_domain: "rebellions.ai"
    ldap_uri: "ldaps://ldap.google.com"
    ldap_users_base: "ou=users,dc=rebellions,dc=ai"
    ldap_groups_base: "ou=groups,dc=rebellions,dc=ai"

    # Google LDAP 인증서 및 키 파일 경로
    ldap_cert_path: "/var/Google_2027_12_17_20121.crt"
    ldap_key_path: "/var/Google_2027_12_17_20121.key"

    sudo_group_name: "ssw"

  tasks:
    - name: Ensure necessary packages are installed
      ansible.builtin.apt:
        name:
          - sssd
          - libpam-sss
          - libnss-sss
          - sssd-tools
          # - ldap-utils
        state: present
        update_cache: true

    - name: Copy Google LDAP client certificate
      ansible.builtin.copy:
        src: "files/ldap/Google_2027_12_17_20121.crt"
        dest: "{{ ldap_cert_path }}"
        mode: '0644'
        owner: root
        group: root

    - name: Copy Google LDAP client key
      ansible.builtin.copy:
        src: "files/ldap/Google_2027_12_17_20121.key"
        dest: "{{ ldap_key_path }}"
        mode: '0600'
        owner: root
        group: root

    - name: Configure sssd.conf using template
      ansible.builtin.template:
        src: sssd.conf.j2
        dest: /etc/sssd/sssd.conf
        mode: '0600'
        owner: root
        group: root
      notify: Restart sssd

    - name: Update nsswitch.conf to use sssd for passwd, group, and shadow
      ansible.builtin.lineinfile:
        path: /etc/nsswitch.conf
        regexp: "^(passwd|group|shadow):\\s*.*"
        line: "\\1:         files sss systemd"
        backrefs: true
        state: present
      notify: Restart sssd

    - name: Enable automatic home directory creation in common-session
      ansible.builtin.blockinfile:
        path: /etc/pam.d/common-session
        block: |
          session optional pam_mkhomedir.so skel=/etc/skel/ umask=0022
        marker: "# {mark} ANSIBLE MANAGED BLOCK for pam_mkhomedir"
        state: present

    - name: Configure sudoers for ssw group
      ansible.builtin.lineinfile:
        path: "/etc/sudoers.d/90-ldap-ssw-sudo"
        line: "%{{ sudo_group_name }} ALL=(ALL:ALL) NOPASSWD: ALL"
        create: true
        mode: '0440'
        owner: root
        group: root
        validate: 'visudo -cf %s'

    - name: Ensure our sshd settings are enforced last
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config.d/99-ansible.conf
        create: true
        mode: '0600'
        owner: root
        group: root
        block: |
          # Settings enforced by Ansible
          PasswordAuthentication yes
          ChallengeResponseAuthentication yes
        validate: 'sshd -t -f %s'
      notify: Restart sshd

    #### Login Optimizing ####

    - name: Disable DNS lookup for faster login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?UseDNS'
        line: 'UseDNS no'
        validate: 'sshd -t -f %s'
      notify: Restart sshd

    - name: Disable GSSAPI authentication for faster login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?GSSAPIAuthentication'
        line: 'GSSAPIAuthentication no'
        validate: 'sshd -t -f %s'
      notify: Restart sshd

    - name: Disable ldap_use_tokengroups in sssd.conf
      ansible.builtin.lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^ldap_use_tokengroups\s*='
        line: 'ldap_use_tokengroups = False'
        mode: '0600'
      notify: Restart sssd

    - name: Set offline_credentials_expiration in sssd.conf
      ansible.builtin.lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^offline_credentials_expiration\s*='
        line: 'offline_credentials_expiration = 7'
        mode: '0600'
      notify: Restart sssd

    - name: Set ldap_entry_cache_timeout in sssd.conf
      ansible.builtin.lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^ldap_entry_cache_timeout\s*='
        line: 'ldap_entry_cache_timeout = 86400'
        mode: '0600'
      notify: Restart sssd

    # - name: (Security) Remove the initial bootstrap key from authorized_keys
    #   ansible.builtin.file:
    #     path: "/home/ubuntu/.ssh/authorized_keys"
    #     state: absent

  handlers:
    - name: Restart sssd
      ansible.builtin.systemd:
        name: sssd
        state: restarted
        enabled: true
      notify: Clear sssd cache

    - name: Clear sssd cache
      ansible.builtin.command:
        cmd: sss_cache -E
      changed_when: false

    - name: Restart sshd
      ansible.builtin.service:
        name: "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"
        state: restarted
        enabled: true
